#!/bin/bash
_kanji() {
	search=$(echo $word | jq -sRr @uri | sed 's/%0A$//g')
	query="https://jisho.org/search/$search%23kanji"
	tempFile=/tmp/jisho-kanji
	curl -s "$query" > $tempFile

	# Print kanji
	echo "Kanji: $word"

	# Get on readings
	echo "On: $(grep -A 2 "On:" $tempFile | sed 's/^[[:space:]]*//g' | awk '/^<a href/' | sed 's/ /;/g; s/<a;href="[A-Za-z0-9\.\/%]*">//g; s/\.//g; s/<\/a>&#[0-9]*;//g; s/<\/a>//g; s/;/, /g')"

	# Get kun readings
	echo "Kun: $(grep -A 2 "Kun:" $tempFile | sed 's/^[[:space:]]*//g' | awk '/^<a href/' | sed 's/ /;/g; s/<a;href="[A-Za-z0-9\.\/%]*">//g; s/\.//g; s/<\/a>&#[0-9]*;//g; s/<\/a>//g; s/;/, /g')"


	# Get translation
	echo -en "Translation: "
	grep -A 1 "kanji-details__main-meanings" $tempFile | sed 's/^[[:space:]]*//g; /<div/d'

	# Image search
	echo -en "\nImage search: "
	echo "https://duckduckgo.com/?t=ffab&q=$search&iax=images&ia=images"

	echo -e "Jisho: $query"
}

_kanjilist() {
	search=$(echo $word | jq -sRr @uri | sed 's/%0A$//g')
	query="https://jisho.org/search/$search"
	result=$(curl -s $query | grep -A 10 "character" | sed 's/^[[:space:]]*//g; s/<span class="character.*kanji">//g; s|</a></span>||g; /span class/d; /div/d; /^$/d; /--/d; /a class=/d')

	IFS=$(echo -e "\n\b")
	firstLine=false
	for i in $result
	do
		if [[ "$firstLine" == "false" ]]
		then
			final="${final}${i}: "
			firstLine=true
		elif [[ "$(grep "<span>" <<< $i)" ]]
		then
			final="$final$(sed 's/<span>//g; s|</span>||g' <<< $i)"
		else
			final=$(echo -e "$final\n$i: ")
		fi
	done

	echo "$final" | sed 's/, $//; /^</d'
}

_translate() {
	search=$(echo $word | jq -sRr @uri | sed 's/%0A$//g')
	query="https://jisho.org/api/v1/search/words?keyword=$search"

	data="$(curl -s $query)"
	japanese=$(echo $data | jq | awk '/slug/ {print $2}' | head -n 1 | sed 's/,//g; s/"//g')
	reading=$(echo $data | jq '.data[0] .japanese[0] .reading' | sed '/\[/d; /\]/d; s/  "//g; s/,//g; s/"//g')
	english=$(echo $data | jq '.data[0] .senses[0] .english_definitions' | sed '/\[/d; /\]/d; s/  "//g; s/,//g; s/"//g')
	jlpt=$(echo $data | jq '.data[0] .jlpt[0]' | sed '/\[/d; /\]/d; s/  "//g; s/,//g; s/"//g; s/n/N/g' | cut -d'-' -f2)

	if [[ "$en_only" == "true" ]]
	then
		# Print english only
		echo "$english"
	else
		if [[ "$japanese" == "$reading" ]]
		then
			echo -e "Japanese:\n$japanese\n"
		else
			echo -e "Japanese:\n$japanese [$reading]\n"
		fi
		echo -e "English:\n$english\n"
		echo -e "JLPT: $jlpt"
		[ "$raw" != "true" ] && echo "https://jisho.org/search/$search"
	fi
}

_printHelp() {
	echo "Usage: jisho [OPTION] search_query"
	echo -e "Without any options, the default behavior is to query the first argument.\nRemember to use quotes if there are spaces in the query!"
	echo -e "\nOptions:"
	echo -e "\t-k\tPrint kanji info"
	echo -e "\t-kl\tPrint translations for all of the kanji in the given word"
	echo -e "\t-r\tTranslate but don't print the jisho link"
	echo -e "\t-e\tPrint only the English translations (useful for scripting)"
}

case $1 in
	-k)
		word="$2"
		_kanji
		;;

	-kl)
		word="$2"
		_kanjilist
		;;

	-r)
		# Print raw without too much extra bling
		shift
		word="$1"
		raw=true
		_translate
		;;

	-e)
		shift
		word="$1"
		en_only=true
		_translate
		;;

	-n)
		# Translate selected text and show the result in a notification
		shift
		word="$(xclip -o)"
		raw=true
		result=$(_translate)
		notify-send -t 10000 "Jisho" "$result"
		;;

	--help | -help | --h | -h)
		_printHelp
		;;

	*)
		word="$1"
		_translate
		;;
esac
